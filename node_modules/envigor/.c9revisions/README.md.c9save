{"ts":1369521684463,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"# envigor\n\nenvigor is a module that creates a configuration object based on what\nenvironment variables are available. This is useful for consolidating possible\nconfiguration options for apps that run in\n\n(It was originally 'enviguration', which made equally no sense and was\nconsequently thrown out for being needlessly long.)\n\n## Contributing\n\nFeel free to submit patches to add any service / interface you know well enough\nto configure. Before doing so, try to get a feel for how things tend to be\nlaid out by looking over the rest of the documentation and code.\n\n## Names\n\nThe conventional names for the configuration variables queried for are based on\nthe variables and names used by services' Heroku addons, as well as example\nvariable names commonly used in setup documentation and tutorials.\n\nFollowing this logic, envigor doesn't search for every possible permutation of\nsynonyms and underscores - only the ones it's reasonably likely to encounter\nbased on precedent. If a variable you set isn't getting picked up, check that\nit's set at the *exact* name where envigor is looking for it, underscores and\nall. (Specifically, note that *different services place underscores in\ndifferent places for the same phrases* , such as \"APIKEY\" and \"API_KEY\".)\n\nObject names are primarily set based on most common phrasing across all\ninstances (such as \"username\" over \"user\" or \"login\"), followed by any\nadditional names used by other popular consumers (such as \"user\" for SMTP to\nmatch the configuration names used by [Nodemailer][]). Specific services will\nalso often have other names set when a common variable name doesn't match the\nprimary name used by envigor.\n\n[Nodemailer]: https://github.com/andris9/Nodemailer\n\nIn lieu of any interface-specific confuration options (eg. SMTP_PASSWORD),\nservices that provide general interfaces (eg. SMTP or MongoDB) are used to set\nthat interface's configuration options. In the (uncommon) event that more than\none service that provides a specific interface has a defined configuration,\nprecedence is defined in an arbitrary order roughly based on who I like best\n(the order used in this documentation).\n\n## Generalized configuration options\n\n### port\n\nThe value of the almost-inescapable `PORT` variable, used for setting the port\nfor a server to listen on.\n\n### smtp\n\n**Provided by:** mandrill, postmark, sendgrid, mailgun\n\n- **username:** `SMTP_USERNAME` || `MANDRILL_USERNAME` || `POSTMARK_API_KEY`\n  || `SENDGRID_USERNAME` || `MAILGUN_SMTP_LOGIN`\n- **user:** Same as **username** (to match [Nodemailer][]).\n- **password:** `SMTP_PASSWORD` || `MANDRILL_APIKEY`\n  || `POSTMARK_API_KEY` || `SENDGRID_PASSWORD`\n  || `MAILGUN_SMTP_PASSWORD`\n- **pass:** Same as **password** (to match [Nodemailer][]).\n- **service:** `SMTP_SERVICE` || 'mandrill', 'postmark', 'sendgrid', or\n  'mailgun', depending on which service (if any) is being used.\n\n### mongodb\n\n**Provided by:** mongolab, mongohq\n\n- **url:** `MONGODB_URL` || `MONGOLAB_URI` || `MONGOHQ_URL`\n\n## Service-specific options\n\n### aws\n\nAmazon Web Services\n\n- **accessKey**: `AWS_ACCESS_KEY_ID` || `AWS_ACCESS_KEY`\n- **secret**: `env.AWS_SECRET` || `env.AWS_SECRET_KEY`\n\n### s3\n\nAmazon's ubiquitous S3 service.\n\n- **accessKey**: `S3_ACCESS_KEY` || `S3_KEY` || the accessKey value for AWS\n- **secret**: `S3_SECRET` || `S3_SECRET_KEY` || the secret value for AWS\n- **bucket**: `S3_BUCKET` || `S3_BUCKET_NAME`\n- **endpoint**: `S3_ENDPOINT` || \"s3.amazonaws.com\"\n\n### facebook\n\nFacebook App configuration\n\n- **appId**: `FACEBOOK_APP_ID`\n- **secret**: `FACEBOOK_SECRET` || `FACEBOOK_APP_SECRET` || the secret value for AWS\n\n### mandrill\n\nMandrill by MailChimp\n\n**Provides:** smtp\n\n- **username:** `MANDRILL_USERNAME`\n- **password:** `MANDRILL_APIKEY`\n\n### postmark\n\nhttps://postmarkapp.com\n\n**Provides:** smtp\n\n- **apiKey:** `POSTMARK_API_KEY`\n- **inboundAddress:** `POSTMARK_INBOUND_ADDRESS`\n\n### sendgrid\n\nSendGrid (http://sendgrid.com)\n\n**Provides:** smtp\n\n- **username:** `SENDGRID_USERNAME`\n- **password:** `SENDGRID_PASSWORD`\n\n### mailgun\n\nThe Mailgun Automation Engine.\n\n**Provides:** smtp\n\n- **apiKey:** `MAILGUN_API_KEY`\n- **smtp**:\n    - **username:** `MAILGUN_SMTP_LOGIN`\n    - **user:** Same as **username** (to match [Nodemailer][]).\n    - **login:** Same as **username** (to match `MAILGUN_SMTP_LOGIN`).\n    - **password:** `MAILGUN_SMTP_PASSWORD`\n    - **pass:** Same as **password** (to match [Nodemailer][]).\n    - **hostname:** `MAILGUN_SMTP_SERVER`\n    - **host:** Same as **hostname** (to match [Nodemailer][]).\n    - **server:** Same as **hostname** (to match `MAILGUN_SMTP_SERVER`).\n    - **port:** `MAILGUN_SMTP_PORT`\n\n### mongolab\n\n**Provides:** mongodb\n\n- **url:** `MONGOLAB_URI`\n- **uri:** Same as **url** (to match `MONGOLAB_URI`).\n\n### mongohq\n\n**Provides:** mongodb\n\n- **url:** `MONGOHQ_URL`\n"]],"start1":0,"start2":0,"length1":0,"length2":4805}]],"length":4805}
{"contributors":[],"silentsave":false,"ts":1369521590354,"patch":[[{"diffs":[[0,"KEY` || "],[-1,"the "],[1,"aws."],[0,"accessKe"]],"start1":3241,"start2":3241,"length1":20,"length2":20},{"diffs":[[0,"ccessKey"],[-1," value for AWS"],[0,"\n- **sec"]],"start1":3254,"start2":3254,"length1":30,"length2":16},{"diffs":[[0," || "],[-1,"the "],[1,"aws."],[0,"secret"],[-1," value for AWS"],[0,"\n- *"]],"start1":3307,"start2":3307,"length1":32,"length2":18},{"diffs":[[0,"INT` || "],[-1,"\""],[1,"'"],[0,"s3.amazo"]],"start1":3393,"start2":3393,"length1":17,"length2":17},{"diffs":[[0,"naws.com"],[-1,"\""],[1,"'"],[0,"\n\n### fa"]],"start1":3410,"start2":3410,"length1":17,"length2":17}]],"length":4777,"saved":false}
{"ts":1369521599554,"patch":[[{"diffs":[[0,"RET`"],[-1," || the secret value for AWS"],[0,"\n\n##"]],"start1":3546,"start2":3546,"length1":36,"length2":8}]],"length":4749,"saved":false}
{"ts":1369521690032,"patch":[[{"diffs":[[0,"_SECRET_KEY`"],[1,"\n  || `env.AWS_SECRET_ACCESS_KEY`"],[0,"\n\n### s3\n\nAm"]],"start1":3146,"start2":3146,"length1":24,"length2":57}]],"length":4782,"saved":false}
{"ts":1369522209426,"patch":[[{"diffs":[[0," || "],[-1,"`MANDRILL_USERNAME` || `POSTMARK_API_KEY`\n  || `SENDGRID_USERNAME` || `MAILGUN_SMTP_LOGIN`"],[1,"mandrill.username || postmark.apiKey\n  || sendgrid.username || mailgun.smtp.username"],[0,"\n- *"]],"start1":2397,"start2":2397,"length1":98,"length2":92},{"diffs":[[0," || "],[-1,"`MANDRILL_APIKEY`\n  || `POSTMARK_API_KEY` || `SENDGRID_PASSWORD`\n  || `MAILGUN_SMTP_PASSWORD`\n- **pass"],[1,"mandrill.apiKey || postmark.apiKey\n  || sendgrid.password || mailgun.smtp.password\n- **pass:** Same as **password** (to match [Nodemailer][]).\n- **hostname:** `SMTP_HOSTNAME` || `SMTP_HOST` || `SMTP_SERVER`\n  || 'smtp.mandrillapp.com' (mandrill) || 'smtp.postmarkapp.com' (postmark)\n  || 'smtp.sendgrid.net' (sendgrid)\n  || (mailgun.smtp.hostname || 'smtp.mailgun.org') (mailgun)\n- **host"],[0,":** "]],"start1":2577,"start2":2577,"length1":110,"length2":396},{"diffs":[[0,"* Same as **"],[-1,"password"],[1,"hostname"],[0,"** (to match"]],"start1":2971,"start2":2971,"length1":32,"length2":32},{"diffs":[[0,"mailer][]).\n"],[1,"- **server:** Same as **hostname** (to match `SMTP_SERVER`).\n- **port:** `SMTP_PORT` || `SMTP_HOST` || `SMTP_SERVER`\n  || '587' (mandrill, postmark) || '2525' (sendgrid)\n  || (mailgun.smtp.port || '587') (mailgun)\n"],[0,"- **service:"]],"start1":3009,"start2":3009,"length1":24,"length2":238}]],"length":5276,"saved":false}
{"ts":1369522271674,"patch":[[{"diffs":[[0,"` ||"],[-1," `SMTP_HOST` || `SMTP_SERVER`\n  ||"],[0," '58"]],"start1":3104,"start2":3104,"length1":42,"length2":8}]],"length":5242,"saved":false}
{"ts":1369522354563,"patch":[[{"diffs":[[0,"ndrill, "],[-1,"postmark"],[1,"sendgrid"],[0,") || '25"]],"start1":3118,"start2":3118,"length1":24,"length2":24},{"diffs":[[0,"'2525' ("],[-1,"sendgrid"],[1,"postmark"],[0,")\n  || ("]],"start1":3139,"start2":3139,"length1":24,"length2":24}]],"length":5242,"saved":false}
{"ts":1369522430710,"patch":[[{"diffs":[[0," || "],[-1,"`MONGOLAB_URI` || `MONGOHQ_URL`"],[1,"mongolab.url || mongohq.url"],[0,"\n\n##"]],"start1":3411,"start2":3411,"length1":39,"length2":35}]],"length":5238,"saved":false}
{"ts":1369522449891,"patch":[[{"diffs":[[0,"ret**: `"],[-1,"env."],[0,"AWS_SECR"]],"start1":3567,"start2":3567,"length1":20,"length2":16},{"diffs":[[0,"SECRET` || `"],[-1,"env."],[0,"AWS_SECRET_K"]],"start1":3579,"start2":3579,"length1":28,"length2":24},{"diffs":[[0,"KEY`"],[-1,"\n "],[0," || `"],[-1,"env."],[0,"AWS_"]],"start1":3602,"start2":3602,"length1":19,"length2":13}]],"length":5224,"saved":false}
{"ts":1369522740765,"patch":[[{"diffs":[[0,"ngolab\n\n"],[1,"MongoLab MongoDB-as-a-Service - https://mongolab.com/\n\n"],[0,"**Provid"]],"start1":5051,"start2":5051,"length1":16,"length2":71},{"diffs":[[0,"ongohq\n\n"],[1,"http://mongohq.com\n\n"],[0,"**Provid"]],"start1":5223,"start2":5223,"length1":16,"length2":36}]],"length":5299,"saved":false}
{"ts":1369534896453,"patch":[[{"diffs":[[0," code.\n\n"],[1,"## Usage\n\nSay you're making an Express app with MongoDB, that you're writing for a\nservice like Heroku, with addons like MongoLab for your\n\n```bash\nnpm install --save envigor mongodb\n```\n\nserver.js:\n```js\nvar http = require('http')\nvar cfg = require('envigor')();\n\nvar app = require('./app.js')(cfg);\nhttp.createServer(app).listen(cfg.port || 5000, function() {\n  console.log(\"Listening on \" + port);\n});\n```\n\napp.js:\n```js\nvar express = require('express');\nmodule.exports = function(cfg){\n  var app = express();\n\n  mongodb.MongoClient.connect(cfg.mongodb.url,function(err,db){\n    if(err) throw err; else app.set('db',db)\n  }\n\n  // ...your routes here...\n\n  return app;\n}\n```\n\n\n"],[0,"## Names"]],"start1":558,"start2":558,"length1":16,"length2":695}]],"length":5978,"saved":false}
{"ts":1369625371639,"patch":[[{"diffs":[[0,"Lab "],[-1,"for your"],[1,"to provide service"],[0,"\n\n``"]],"start1":692,"start2":692,"length1":16,"length2":26},{"diffs":[[0,"sername\n- **user"],[1,", auth.user"],[0,":** Same as **us"]],"start1":3167,"start2":3167,"length1":32,"length2":43},{"diffs":[[0,"assword\n- **pass"],[1,", auth.pass"],[0,":** Same as **pa"]],"start1":3356,"start2":3356,"length1":32,"length2":43}]],"length":6010,"saved":false}
{"ts":1369625929604,"patch":[[{"diffs":[[0,"provide "],[-1,"service"],[1,"your more general\nservices like MongoDB. By using envigor, you can set your app up to find a\nconfigured MongoDB service with complete service agnosticism:"],[0,"\n\n```bas"]],"start1":699,"start2":699,"length1":23,"length2":170},{"diffs":[[0,"mongodb\n"],[1,"heroku addons:add mongolab\n"],[0,"```\n\nser"]],"start1":898,"start2":898,"length1":16,"length2":43}]],"length":6184,"saved":false}
{"ts":1369647511275,"patch":[[{"diffs":[[0,"_SECRET`"],[1,"\n- **clientID**: Same as **appId** (to match [passport-facebook][]).\n\n[passport-facebook]: https://github.com/jaredhanson/passport-facebook"],[0,"\n\n### ma"]],"start1":4902,"start2":4902,"length1":16,"length2":155}]],"length":6323,"saved":false}
{"ts":1369647514206,"patch":[[{"diffs":[[0,"ook][])."],[1,"\n- **clientSecret**: Same as **secret** (to match [passport-facebook][])."],[0,"\n\n[passp"]],"start1":4970,"start2":4970,"length1":16,"length2":89}]],"length":6396,"saved":false}
